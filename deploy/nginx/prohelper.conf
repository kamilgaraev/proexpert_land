# HTTP -> HTTPS redirect
server {
    listen 80;
    server_name prohelper.pro lk.prohelper.pro *.prohelper.pro;
    return 301 https://$host$request_uri;
}

############################################################
# Маркетинговый сайт – prohelper.pro (vite-plugin-ssr)
############################################################
server {
    listen 443 ssl http2;
    server_name prohelper.pro;

    # Используем сертификат, выпущенный именно для корневого домена
    ssl_certificate     /etc/letsencrypt/live/prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/prohelper.pro/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # Статика сборки находится в client (раскладывается GitHub Actions)
    root /var/www/prohelper_marketing/client;
    index index.html;

    # 1) отдаем пререндеренный HTML, если он существует
    # 2) иначе проксируем на SSR-ноду vite-plugin-ssr (порт 3001)
    location / {
        try_files $uri $uri.html @ssr;
    }

    location @ssr {
        proxy_pass         http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # Кэш ассетов
    location ~* \.(?:js|css|png|jpe?g|gif|ico|svg|woff2?|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    access_log /var/log/nginx/prohelper_access.log;
    error_log  /var/log/nginx/prohelper_error.log;
}

############################################################
# Личный кабинет – lk.prohelper.pro (SPA)
############################################################
server {
    listen 443 ssl http2;
    server_name lk.prohelper.pro;

    ssl_certificate     /etc/letsencrypt/live/lk.prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lk.prohelper.pro/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/prohelper_lk;
    index index.html;

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Проксируем API к бекенду
    location /api/ {
        proxy_pass https://api.prohelper.pro;
        proxy_set_header Host api.prohelper.pro;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~* \.(?:js|css|png|jpe?g|gif|ico|svg|woff2?|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    access_log /var/log/nginx/lk_access.log;
    error_log  /var/log/nginx/lk_error.log;
}

############################################################
# Поддомены холдингов  *.prohelper.pro  → тот же SPA
############################################################
server {
    listen 443 ssl http2;
    server_name ~^(?<holding_slug>[^.]+)\.prohelper\.pro$;

    ssl_certificate     /etc/letsencrypt/live/wildcard.prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wildcard.prohelper.pro/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/prohelper_lk;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location ~* \.(?:js|css|png|jpe?g|gif|ico|svg|woff2?|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    access_log /var/log/nginx/holding_access.log;
    error_log  /var/log/nginx/holding_error.log;
} 