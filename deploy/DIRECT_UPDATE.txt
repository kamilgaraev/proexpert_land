====== ОБНОВЛЕНИЕ NGINX ОДНОЙ КОМАНДОЙ (БЕЗ SCP) ======

Подключитесь к серверу и выполните:

ssh root@your-server

Затем скопируйте и вставьте ВСЮ эту команду целиком:

cat > /etc/nginx/sites-available/prohelper.pro.conf << 'PROHELPER_CONF'
server {
    listen 80;
    listen [::]:80;
    server_name prohelper.pro www.prohelper.pro;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name prohelper.pro www.prohelper.pro;

    ssl_certificate /etc/letsencrypt/live/prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/prohelper.pro/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/prohelper_marketing/client;
    index index.html;

    location = /dashboard {
        return 301 https://lk.prohelper.pro/dashboard;
    }

    location ^~ /dashboard/ {
        return 301 https://lk.prohelper.pro$request_uri;
    }

    location = /login {
        return 301 https://lk.prohelper.pro/login;
    }

    location = /register {
        return 301 https://lk.prohelper.pro/register;
    }

    location = /forgot-password {
        return 301 https://lk.prohelper.pro/forgot-password;
    }

    location / {
        try_files $uri $uri.html @ssr;
    }

    location @ssr {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    access_log /var/log/nginx/prohelper_access.log;
    error_log /var/log/nginx/prohelper_error.log;
}
PROHELPER_CONF

cat > /etc/nginx/sites-available/lk.prohelper.pro.conf << 'LK_CONF'
server {
    listen 80;
    listen [::]:80;
    server_name lk.prohelper.pro;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name lk.prohelper.pro;

    ssl_certificate /etc/letsencrypt/live/lk.prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lk.prohelper.pro/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/prohelper_lk;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api/ {
        proxy_pass https://api.prohelper.pro;
        proxy_set_header Host api.prohelper.pro;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    access_log /var/log/nginx/lk_access.log;
    error_log /var/log/nginx/lk_error.log;
}
LK_CONF

cat > /etc/nginx/sites-available/holdings.prohelper.pro.conf << 'HOLDINGS_CONF'
server {
    listen 80;
    listen [::]:80;
    server_name *.prohelper.pro;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ~^(?<holding_slug>[^.]+)\.prohelper\.pro$;

    ssl_certificate /etc/letsencrypt/live/prohelper.pro-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/prohelper.pro-0001/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/prohelper_lk;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    access_log /var/log/nginx/holding_access.log;
    error_log /var/log/nginx/holding_error.log;
}
HOLDINGS_CONF

sudo ln -sf /etc/nginx/sites-available/prohelper.pro.conf /etc/nginx/sites-enabled/
sudo ln -sf /etc/nginx/sites-available/lk.prohelper.pro.conf /etc/nginx/sites-enabled/
sudo ln -sf /etc/nginx/sites-available/holdings.prohelper.pro.conf /etc/nginx/sites-enabled/

sudo nginx -t && sudo systemctl reload nginx && echo "✅ Nginx успешно обновлен!"




