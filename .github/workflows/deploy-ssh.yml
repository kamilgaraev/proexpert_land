name: Deploy Marketing via SSH

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TARGET_PATH: /var/www/prohelper_marketing
      NODE_VERSION: '20'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies & build SSR
        run: |
          # Полная очистка локальной копии зависимостей
          rm -rf node_modules package-lock.json || true
          npm install --include=dev --no-audit --no-fund
          chmod +x node_modules/.bin/* || true
          npm run build   # vite build + copy-manifest

      - name: Pack artefacts
        run: |
          # Копируем runtime package.json + lock внутрь dist,
          # чтобы после распаковки на сервере можно было установить зависимости.
          cp package.json dist/
          if [ -f package-lock.json ]; then cp package-lock.json dist/; fi

          # Пакуем client, server и package*.json. Каталог prerender может отсутствовать.
          if [ -d dist/prerender ]; then
            tar -czf marketing.tgz -C dist client prerender server package.json package-lock.json || true
          else
            tar -czf marketing.tgz -C dist client server package.json package-lock.json || true
          fi

      - name: Upload artefacts to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: root
          source: "marketing.tgz"
          target: "/tmp/"

      - name: Deploy on server & restart PM2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: root
          script: |
            set -e
            TARGET_PATH=${{ env.TARGET_PATH }}
            # Удаляем предыдущие раскладки
            rm -rf /tmp/marketing.tgz.dir || true
            mkdir -p $TARGET_PATH
            if [ -f /tmp/marketing.tgz ]; then
              tar -xzf /tmp/marketing.tgz -C $TARGET_PATH
              rm /tmp/marketing.tgz
            else
              echo "Файл /tmp/marketing.tgz не найден" && exit 1
            fi
            # Если после раскладки есть SSR-сервер, устанавливаем deps и (ре)стартуем pm2
            if [ -f "$TARGET_PATH/server/importBuild.cjs" ] || [ -f "$TARGET_PATH/server/index.js" ]; then
              # Устанавливаем runtime-зависимости в корень, чтобы server/* видел ../../node_modules
              cd "$TARGET_PATH"
              npm install --omit=dev --no-audit --no-fund

              # Запускаем встроенный preview-сервер vite-plugin-ssr
              pm2 reload prohelper-ssr || pm2 start "npx vite-plugin-ssr preview --port 3001" --name prohelper-ssr --time
              pm2 save
            else
              echo "SSR-entry не найден — деплой только статики, pm2 не требуется."
            fi 