name: Deploy ProHelper

on:
  push:
    branches: [ main ]

jobs:
  deploy-marketing:
    if: contains(github.event.head_commit.message, '[marketing]') || contains(github.event.head_commit.message, '[both]')
    runs-on: ubuntu-latest
    env:
      TARGET_PATH: /var/www/prohelper_marketing
      NODE_VERSION: '22'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies & build SSR
        run: |
          rm -rf node_modules package-lock.json || true
          npm install --include=dev --no-audit --no-fund
          chmod +x node_modules/.bin/* || true
          npm run build:marketing

      - name: Pack artefacts
        run: |
          cp package.json dist/
          if [ -f package-lock.json ]; then cp package-lock.json dist/; fi
          if [ -d dist/prerender ]; then
            tar -czf marketing.tgz -C dist client prerender server assets.json package.json package-lock.json || true
          else
            tar -czf marketing.tgz -C dist client server assets.json package.json package-lock.json || true
          fi

      - name: Upload artefacts to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: root
          source: "marketing.tgz"
          target: "/tmp/"

      - name: Deploy on server & restart PM2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: root
          script: |
            set -e
            TARGET_PATH=${{ env.TARGET_PATH }}
            rm -rf /tmp/marketing.tgz.dir || true
            mkdir -p $TARGET_PATH
            if [ -f /tmp/marketing.tgz ]; then
              tar -xzf /tmp/marketing.tgz -C $TARGET_PATH
              rm /tmp/marketing.tgz
            else
              echo "Файл /tmp/marketing.tgz не найден" && exit 1
            fi
            if [ -d "$TARGET_PATH/server" ]; then
              cd "$TARGET_PATH"
                npm install --omit=dev --no-audit --no-fund
              pm2 delete prohelper-ssr || true
              PORT=3001 pm2 start "$TARGET_PATH/server/index.cjs" --name prohelper-ssr --time
              pm2 save
            else
              echo "SSR-entry не найден — деплой только статики, pm2 не требуется."
            fi 

  deploy-lk:
    if: contains(github.event.head_commit.message, '[lk]') || contains(github.event.head_commit.message, '[both]')
    runs-on: ubuntu-latest
    env:
      TARGET_PATH: /var/www/prohelper_lk
      NODE_VERSION: '22'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies & build LK
        run: |
          rm -rf node_modules package-lock.json || true
          npm install --include=dev --no-audit --no-fund
          chmod +x node_modules/.bin/* || true
          npm run build:lk

      - name: Upload artefacts to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: root
          source: "dist-lk/**"
          target: "/var/www/prohelper_lk/"
          strip_components: 1

      - name: Clean old files on server (optional)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: root
          script: |
            set -e
            mkdir -p /var/www/prohelper_lk
