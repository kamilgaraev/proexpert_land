#!/bin/bash

echo "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL –¥–ª—è –õ–ö —Å–µ—Ä–≤–µ—Ä–∞ (prohelper.pro + lk.prohelper.pro + *.prohelper.pro)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω —Å sudo
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å sudo"
    exit 1
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot..."
apt update
apt install -y certbot python3-certbot-nginx

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
get_certificate() {
    local domains="$1"
    local cert_name="$2"
    
    echo "üåü –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è: $domains"
    echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –í–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å TXT –∑–∞–ø–∏—Å–∏ –≤ DNS –ø–∞–Ω–µ–ª–∏ reg.ru!"
    echo "üìã Certbot –ø–æ–∫–∞–∂–µ—Ç –≤–∞–º TXT –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–µ–Ω–∞"
    echo ""
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å..."
    read -p ""

    certbot certonly \
        --manual \
        --preferred-challenges dns \
        --email kamilgaraev11@gmail.com \
        --agree-tos \
        --no-eff-email \
        --cert-name "$cert_name" \
        $domains
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx
echo "‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx..."
systemctl stop nginx

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
get_certificate "-d lk.prohelper.pro -d prohelper.pro" "lk.prohelper.pro"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±—ã–ª –ø–æ–ª—É—á–µ–Ω
if [ ! -f "/etc/letsencrypt/live/lk.prohelper.pro/fullchain.pem" ]; then
    echo "‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    systemctl start nginx
    exit 1
fi

echo "‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!"

# –ü–æ–ª—É—á–µ–Ω–∏–µ wildcard —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤ —Ö–æ–ª–¥–∏–Ω–≥–æ–≤
echo ""
echo "üîÑ –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º wildcard —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤ —Ö–æ–ª–¥–∏–Ω–≥–æ–≤..."
get_certificate "-d *.prohelper.pro" "wildcard.prohelper.pro"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ wildcard —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±—ã–ª –ø–æ–ª—É—á–µ–Ω
if [ ! -f "/etc/letsencrypt/live/wildcard.prohelper.pro/fullchain.pem" ]; then
    echo "‚ö†Ô∏è Wildcard —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω, –Ω–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –µ—Å—Ç—å."
    echo "üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º..."
    WILDCARD_AVAILABLE=false
else
    echo "‚úÖ Wildcard SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!"
    WILDCARD_AVAILABLE=true
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
echo "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
cat > /etc/systemd/system/certbot-renew-lk.service << 'EOF'
[Unit]
Description=Certbot Renewal for LK and Holdings
After=syslog.target

[Service]
Type=oneshot
ExecStart=/usr/bin/certbot renew --quiet --no-self-upgrade --post-hook "systemctl reload nginx"
EOF

cat > /etc/systemd/system/certbot-renew-lk.timer << 'EOF'
[Unit]
Description=Timer for Certbot Renewal LK and Holdings

[Timer]
OnBootSec=300
OnUnitActiveSec=1d

[Install]
WantedBy=multi-user.target
EOF

systemctl enable certbot-renew-lk.timer
systemctl start certbot-renew-lk.timer

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
cat > /etc/nginx/sites-available/prohelper-lk << 'EOF'
# HTTP -> HTTPS —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
server {
    listen 80;
    server_name prohelper.pro lk.prohelper.pro *.prohelper.pro;
    return 301 https://$server_name$request_uri;
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç prohelper.pro
server {
    listen 443 ssl http2;
    server_name prohelper.pro;
    
    ssl_certificate /etc/letsencrypt/live/lk.prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lk.prohelper.pro/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    root /var/www/prohelper_land/dist;
    index index.html;
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # –õ–æ–≥–∏
    access_log /var/log/nginx/prohelper_access.log;
    error_log /var/log/nginx/prohelper_error.log;
}

# –õ–ö —Å–∞–π—Ç lk.prohelper.pro
server {
    listen 443 ssl http2;
    server_name lk.prohelper.pro;
    
    ssl_certificate /etc/letsencrypt/live/lk.prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lk.prohelper.pro/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    root /var/www/prohelper_land/dist;
    index index.html;
    
    # –õ–ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # API –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ
    location /api/ {
        proxy_pass https://api.prohelper.pro;
        proxy_set_header Host api.prohelper.pro;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # –õ–æ–≥–∏
    access_log /var/log/nginx/lk_access.log;
    error_log /var/log/nginx/lk_error.log;
}

EOF

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤ —Ö–æ–ª–¥–∏–Ω–≥–æ–≤
if [ "$WILDCARD_AVAILABLE" = true ]; then
    echo "üìù –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤ —Ö–æ–ª–¥–∏–Ω–≥–æ–≤ —Å wildcard —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º..."
    cat >> /etc/nginx/sites-available/prohelper-lk << 'EOF'
# –ü–æ–¥–¥–æ–º–µ–Ω—ã —Ö–æ–ª–¥–∏–Ω–≥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: proverocka.prohelper.pro)
server {
    listen 443 ssl http2;
    server_name ~^(?<holding_slug>[^.]+)\.prohelper\.pro$;
    
    ssl_certificate /etc/letsencrypt/live/wildcard.prohelper.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wildcard.prohelper.pro/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    root /var/www/prohelper_land/dist;
    index index.html;
    
    # –í—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –æ—Ç–¥–∞–µ–º React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # –õ–æ–≥–∏ –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤
    access_log /var/log/nginx/holding_access.log;
    error_log /var/log/nginx/holding_error.log;
}
EOF
else
    echo "‚ö†Ô∏è Wildcard —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–¥–¥–æ–º–µ–Ω—ã —Ö–æ–ª–¥–∏–Ω–≥–æ–≤ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ SSL."
    echo "üí° –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ wildcard —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –ø–æ–∑–∂–µ –∫–æ–º–∞–Ω–¥–æ–π:"
    echo "   sudo certbot certonly --manual --preferred-challenges dns -d '*.prohelper.pro' --cert-name wildcard.prohelper.pro"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üîó –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
rm -f /etc/nginx/sites-enabled/default
ln -sf /etc/nginx/sites-available/prohelper-lk /etc/nginx/sites-enabled/

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p /var/log/nginx

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
nginx -t

if [ $? -eq 0 ]; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    echo "üöÄ –ó–∞–ø—É—Å–∫ Nginx..."
    systemctl start nginx
    systemctl enable nginx
    
    echo ""
    echo "üéâ SSL —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:"
    echo "   ‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: https://prohelper.pro"
    echo "   ‚Ä¢ –õ–ö: https://lk.prohelper.pro"
    if [ "$WILDCARD_AVAILABLE" = true ]; then
        echo "   ‚Ä¢ –ü–æ–¥–¥–æ–º–µ–Ω—ã —Ö–æ–ª–¥–∏–Ω–≥–æ–≤: https://proverocka.prohelper.pro"
    fi
    echo ""
    echo "üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
    echo "üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: systemctl status certbot-renew-lk.timer"
    echo ""
    echo "üîç –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:"
    echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: sudo certbot certificates"
    echo "   ‚Ä¢ –õ–æ–≥–∏ –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤: sudo tail -f /var/log/nginx/holding_access.log"
    echo "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL: curl -I https://proverocka.prohelper.pro"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: nginx -t"
    echo "üìù –õ–æ–≥ –æ—à–∏–±–æ–∫: tail -f /var/log/nginx/error.log"
    exit 1
fi 